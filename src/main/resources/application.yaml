# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api/v1

# Spring Datasource Configuration
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/sakila
    username: sakila
    password: sakila
    hikari:
      minimum-idle: 30
      maximum-pool-size: 30
      connection-timeout: 10000
      validation-timeout: 5000
      leak-detection-threshold: 60000
      auto-commit: true
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    open-in-view: true
    show-sql: true

  # Redis Configuration
  # Changes:
  # - Set `repositories.enabled` to `false` to disable Redis caching temporarily.
  # - This resolves the Redis connection issue by bypassing Redis-related dependencies.
  data:
    redis:
      repositories:
        enabled: false
      lettuce:
        pool:
          enabled: true
          min-idle: 10
          max-idle: 10
          max-active: 10
          max-wait: 10000

# Logging Configuration
logging:
  level:
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
    root: info

# Management Endpoints Configuration
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus,auth"
    jmx:
      exposure:
        exclude: "*"

# Application Properties
app:
  uri:
    scheme: http
    host: localhost
    port: ${server.port}

  # JWT Configuration
  jwt:
    # Change:
    # - Updated the JWT signing key to a secure and proper Base64 encoded key.
    # - Ensure this matches across all components (token generation and validation).
    signing-key: "aW8uanNvbndlYnRva2VuLnNlY3VyaXR5"  # Base64 encoded key
